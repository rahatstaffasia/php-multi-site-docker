version: '3'

services:
  laravel:
    build:
      context: ./sites/lara_store
      dockerfile: Dockerfile
    volumes:
      - ./sites/lara_store:/var/www/html
    networks:
      - backend
      - frontend
  
  breeze_next:
    build:
      context: ./sites/breeze-next
      dockerfile: Dockerfile
    volumes:
      - ./sites/breeze-next:/app
    ports:
      - 3000:3000
    networks:
      - backend
      - frontend

  wordpress:
    build:
      context: ./sites/wordpress
      dockerfile: Dockerfile
    volumes:
      - ./sites/wordpress:/var/www/html
    networks:
      - backend

  nginx:
    build:
      context: ./services/nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
      dockerfile: Dockerfile    
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
      - "${VARNISH_BACKEND_PORT}:81"
    volumes:
      # - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    networks:
      - backend

  # phpunit:
  #   image: binarydata/phpunit
  #   depends_on:
  #   #  - mysql
  #    - redis
  #   links:
  #    - database:database
  #    - redis:redis
  #   volumes_from:
  #    - data

  mysql:
    build: 
      context: ./services/mysql
      dockerfile: Dockerfile
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

networks:
  backend:
  frontend: